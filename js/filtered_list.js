// Generated by clinch 0.3.5
(function() {
  'use strict';
  
      
var dependencies, name_resolver, require, sources, _this = this;

name_resolver = function(parent, name) {
  if (dependencies[parent] == null) {
    throw Error("no dependencies list for parent |" + parent + "|");
  }
  if (dependencies[parent][name] == null) {
    throw Error("no one module resolved, name - |" + name + "|, parent - |" + parent + "|");
  }
  return dependencies[parent][name];
};
require = function(name, parent) {
  var exports, module, module_source, resolved_name, _ref;
  if (!(module_source = sources[name])) {
    resolved_name = name_resolver(parent, name);
    if (!(module_source = sources[resolved_name])) {
      throw Error("can`t find module source code: original_name - |" + name + "|, resolved_name - |" + resolved_name + "|");
    }
  }
  module_source.call(_this,exports = {}, module = {}, function(mod_name) {
    return require(mod_name, resolved_name != null ? resolved_name : name);
  });
  return (_ref = module.exports) != null ? _ref : exports;
};
  dependencies = {"224262038":{"backbone":3339915730},"791485693":{"lodash":1154215551,"escape-regexp":2835257351,"backbone.viewmodel":1052468800},"1072739154":{"backbone.marionette":2486755085,"./templates/input_tmpl":1670492861},"1306716682":{"backbone.viewmodel":1052468800},"1693630646":{"backbone.marionette":2486755085,"./item_view":3684540465},"1771610674":{"./filtered_list/isolated_scroll":1907951500,"./filtered_list/app_layout":2134585997,"./filtered_list/base_model":4294125673,"./filtered_list/empty_model":3191490708,"./filtered_list/item_vm":791485693,"./filtered_list/item_collection":224262038,"./filtered_list/item_collection_view":1693630646,"./filtered_list/input_vm":1306716682,"./filtered_list/input_view":1072739154,"lodash":1154215551,"./filtered_list/resume_text_view":3929517705},"1907951500":{"jquery":2074025255},"2134585997":{"./templates/layout_tmpl":3730906345,"backbone.marionette":2486755085},"3191490708":{"backbone":3339915730},"3684540465":{"./templates/item_tmpl":2787892459,"backbone.marionette":2486755085},"3929517705":{"backbone.marionette":2486755085,"./templates/resume_tmpl":1255671186},"4294125673":{"backbone":3339915730}};
  sources = {
"224262038": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/item_collection.coffee 
/*
This is our collections for items
*/

var Backbone, ItemsCollection, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone = require('backbone');

module.exports = ItemsCollection = (function(_super) {
  __extends(ItemsCollection, _super);

  function ItemsCollection() {
    _ref = ItemsCollection.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  ItemsCollection.prototype.comparator = function(element) {
    return element.get('text');
  };

  return ItemsCollection;

})(Backbone.Collection);
},
"791485693": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/item_vm.coffee 
/*
This is passive VM example
*/

var ItemViewModel, escape_regexp, _, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('lodash');

escape_regexp = require('escape-regexp');

Backbone.ViewModel = require('backbone.viewmodel');

module.exports = ItemViewModel = (function(_super) {
  __extends(ItemViewModel, _super);

  function ItemViewModel() {
    _ref = ItemViewModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  ItemViewModel.prototype.autoupdate = true;

  ItemViewModel.prototype.mapping = {
    filter: 'buildFilter',
    data: 'getFilteredData'
  };

  ItemViewModel.prototype.buildFilter = function() {
    return new RegExp(escape_regexp(this.model.get('filter')), 'i');
  };

  ItemViewModel.prototype.getFilteredData = function() {
    var reFilter;

    reFilter = this.get('filter');
    return _.filter(this.model.get('data'), function(element) {
      return reFilter.test(element.text);
    });
  };

  return ItemViewModel;

})(Backbone.ViewModel);
},
"1052468800": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/backbone.viewmodel.coffee 
/*
This is Backbone.ViewModel shim
*/
module.exports = this.Backbone.ViewModel;
},
"1072739154": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/input_view.coffee 
/*
This is Input view
*/

var InputView, Marionette, input_template, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

input_template = require('./templates/input_tmpl');

module.exports = InputView = (function(_super) {
  __extends(InputView, _super);

  function InputView() {
    this.updateConfig = __bind(this.updateConfig, this);    _ref = InputView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  InputView.prototype.template = input_template;

  InputView.prototype.events = {
    'keyup #filter-input': 'updateConfig'
  };

  InputView.prototype.updateConfig = function(e) {
    return this.model.changeData({
      filter: $('#filter-input').val()
    });
  };

  return InputView;

})(Marionette.ItemView);
},
"1154215551": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/lodash.coffee 
/*
This is lodash shim
*/
module.exports = this._;
},
"1255671186": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/templates/resume_tmpl.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("\n<p>Total items in raw data - <b>" + (jade.escape((jade.interp = self.total) == null ? '' : jade.interp)) + "</b></p>\n<p>Filtered items, available for select - <b>" + (jade.escape((jade.interp = self.filtered) == null ? '' : jade.interp)) + "</b></p>");return buf.join("");
}},
"1306716682": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/input_vm.coffee 
/*
This is active VM
*/

var InputViewModel, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone.ViewModel = require('backbone.viewmodel');

module.exports = InputViewModel = (function(_super) {
  __extends(InputViewModel, _super);

  function InputViewModel() {
    this.changeData = __bind(this.changeData, this);    _ref = InputViewModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  InputViewModel.prototype.mapping = {
    filter: 'filter'
  };

  InputViewModel.prototype.changeData = function(new_data) {
    return this.model.set(new_data);
  };

  return InputViewModel;

})(Backbone.ViewModel);
},
"1670492861": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/templates/input_tmpl.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("\n<div>\n  <label for=\"text\">Enter filter pattern :</label>\n  <input" + (jade.attrs({ 'id':('filter-input'), 'type':('text'), 'value':("" + (self.filter) + "") }, {"type":true,"value":true})) + "/>\n</div>");return buf.join("");
}},
"1693630646": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/item_collection_view.coffee 
/*
This is Marionette collection view
*/

var ItemView, Marionette, RectangleCollectionView, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

ItemView = require('./item_view');

module.exports = RectangleCollectionView = (function(_super) {
  __extends(RectangleCollectionView, _super);

  function RectangleCollectionView() {
    _ref = RectangleCollectionView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  RectangleCollectionView.prototype.tagName = 'ul';

  RectangleCollectionView.prototype.className = 'sortable__container';

  RectangleCollectionView.prototype.itemView = ItemView;

  RectangleCollectionView.PAGER_SETTING = {
    start: 0,
    by_page: 15
  };

  RectangleCollectionView.prototype.initialize = function() {
    this.$el.sortable().disableSelection();
    this.$el.isolatedScroll();
    this.pager = _.cloneDeep(this.constructor.prototype.constructor.PAGER_SETTING);
    this._down_counter_ = 0;
    return this._is_real_event = false;
  };

  RectangleCollectionView.prototype.onBeforeRender = function() {
    console.log('onBeforeRender');
    this._down_counter_ = 0;
    this.$el.children().waypoint('destroy');
    return this.$el.scrollTop(0);
  };

  RectangleCollectionView.prototype.onRender = function() {
    var doLog,
      _this = this;

    console.log('onRender');
    doLog = function(dir) {
      if (!_this._is_real_event) {
        _this._is_real_event = true;
        return null;
      }
      if (dir === 'down') {
        _this.$el.find(':last-child').waypoint('destroy');
        if (_this.showCollection(++_this._down_counter_ * _this.pager.by_page)) {
          return _this.$el.find(':last-child').waypoint({
            handler: doLog,
            context: 'ul',
            offset: '100%'
          });
        }
      }
    };
    return this.$el.find(':last-child').waypoint({
      handler: doLog,
      context: 'ul',
      offset: '100%'
    });
  };

  RectangleCollectionView.prototype.showCollection = function(start, count) {
    var Item_View, idx, item, _i, _ref1;

    if (start == null) {
      start = this.pager.start;
    }
    if (count == null) {
      count = this.pager.by_page;
    }
    for (idx = _i = start, _ref1 = start + count; start <= _ref1 ? _i < _ref1 : _i > _ref1; idx = start <= _ref1 ? ++_i : --_i) {
      if (item = this.collection.models[idx]) {
        Item_View = this.getItemView(item);
        this.addItemView(item, Item_View, idx);
      } else {
        return false;
      }
      null;
    }
    null;
    return true;
  };

  return RectangleCollectionView;

})(Marionette.CollectionView);
},
"1771610674": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list.coffee 
/*
This is filtered list example
*/

var AppLayout, BaseModel, EmptyModel, FAKE_COUNT, InputView, InputViewModel, ItemCollection, ItemCollectionView, ItemViewModel, ResumeTextView, buildFakeData, init_fn, _;

require('./filtered_list/isolated_scroll');

_ = require('lodash');

AppLayout = require('./filtered_list/app_layout');

BaseModel = require('./filtered_list/base_model');

EmptyModel = require('./filtered_list/empty_model');

ItemViewModel = require('./filtered_list/item_vm');

ItemCollection = require('./filtered_list/item_collection');

ItemCollectionView = require('./filtered_list/item_collection_view');

InputViewModel = require('./filtered_list/input_vm');

InputView = require('./filtered_list/input_view');

ResumeTextView = require('./filtered_list/resume_text_view');

buildFakeData = function(num) {
  return _.times(num, function() {
    return {
      text: Faker.Name.findName()
    };
  });
};

FAKE_COUNT = 1024;

init_fn = function(main_elem) {
  var base_model, data, input_vm, item_vm, layout, models, resume_model;

  layout = new AppLayout;
  layout.render();
  $(main_elem).append(layout.el);
  data = buildFakeData(FAKE_COUNT);
  base_model = new BaseModel({
    data: data
  });
  resume_model = new EmptyModel({
    total: FAKE_COUNT,
    filtered: FAKE_COUNT
  });
  input_vm = new InputViewModel(base_model);
  item_vm = new ItemViewModel(base_model);
  models = new ItemCollection(item_vm.get('data'));
  item_vm.on('change:data', function() {
    console.time('change:data');
    models.reset(item_vm.get('data'));
    console.timeEnd('change:data');
    return resume_model.set('filtered', _.size(item_vm.get('data')));
  });
  layout.inputRegion.show(new InputView({
    model: input_vm
  }));
  console.time('part');
  layout.contentRegion.show(new ItemCollectionView({
    collection: models
  }));
  console.timeEnd('part');
  return layout.dataRegion.show(new ResumeTextView({
    model: resume_model
  }));
};

module.exports = init_fn;
},
"1907951500": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/isolated_scroll.coffee 
/*
Use this with jQuery Mouse Wheel Plugin
https://github.com/brandonaaron/jquery-mousewheel

TODO make it more solid with amd
*/
(function(factory) {
  if (typeof exports === 'object') {
    return factory(require('jquery'));
  } else if (typeof define === "function" && define.amd) {
    return define(["jquery"], factory);
  } else {
    return factory(jQuery);
  }
})(function($) {
  return $.fn.extend({
    isolatedScroll: function() {
      this.on('mousewheel', function(evnt, delta, deltaX, deltaY) {
        var bottomOverflow, topOverflow;

        bottomOverflow = this.scrollTop + $(this).outerHeight() - this.scrollHeight >= 0;
        topOverflow = this.scrollTop <= 0;
        if ((deltaY < 0 && bottomOverflow) || (deltaY > 0 && topOverflow)) {
          return evnt.preventDefault();
        }
      });
      return this;
    }
  });
});
},
"2074025255": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/jquery.coffee 
/*
This is Jquery shim
*/
module.exports = this.jQuery;
},
"2134585997": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/app_layout.coffee 
/*
This is Applicaton Layout
*/

var AppLayout, Marionette, layout_template, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

layout_template = require('./templates/layout_tmpl');

module.exports = AppLayout = (function(_super) {
  __extends(AppLayout, _super);

  function AppLayout() {
    _ref = AppLayout.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  AppLayout.prototype.template = layout_template;

  AppLayout.prototype.regions = {
    inputRegion: "#config-input",
    contentRegion: "#sortable-box",
    dataRegion: "#show-data"
  };

  return AppLayout;

})(Marionette.Layout);
},
"2486755085": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/backbone.marionette.coffee 
/*
This is Backbone shim
*/
module.exports = this.Marionette;
},
"2787892459": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/templates/item_tmpl.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("" + (jade.escape((jade.interp = self.text) == null ? '' : jade.interp)) + "");return buf.join("");
}},
"2835257351": function(exports, module, require) {
// /Users/meettya/github/colorbox/node_modules/escape-regexp/index.js 

/**
 * Escape regexp special characters in `str`.
 *
 * @param {String} str
 * @return {String}
 * @api public
 */

module.exports = function(str){
  return String(str).replace(/([.*+?=^!:${}()|[\]\/\\])/g, '\\$1');
};},
"3191490708": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/empty_model.coffee 
/*
This is dystrophic base Model
*/

var Backbone, EmptyModel, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone = require('backbone');

module.exports = EmptyModel = (function(_super) {
  __extends(EmptyModel, _super);

  function EmptyModel() {
    _ref = EmptyModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  return EmptyModel;

})(Backbone.Model);
},
"3339915730": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/backbone.coffee 
/*
This is Backbone shim
*/
module.exports = this.Backbone;
},
"3684540465": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/item_view.coffee 
/*
This is view for Rectangle
*/

var ItemView, Marionette, item_template, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

item_template = require('./templates/item_tmpl');

module.exports = ItemView = (function(_super) {
  __extends(ItemView, _super);

  function ItemView() {
    _ref = ItemView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  ItemView.prototype.tagName = 'li';

  ItemView.prototype.className = 'sortable__item';

  ItemView.prototype.template = item_template;

  return ItemView;

})(Marionette.ItemView);
},
"3730906345": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/templates/layout_tmpl.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("\n<div class=\"span6\">\n  <div id=\"config-input\"></div>\n  <div id=\"sortable-box\"></div>\n  <div id=\"show-data\"></div>\n</div>");return buf.join("");
}},
"3929517705": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/resume_text_view.coffee 
/*
This is view for Rectangle
*/

var ItemView, Marionette, resume_template, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

resume_template = require('./templates/resume_tmpl');

module.exports = ItemView = (function(_super) {
  __extends(ItemView, _super);

  function ItemView() {
    _ref = ItemView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  ItemView.prototype.className = 'resume__box';

  ItemView.prototype.template = resume_template;

  ItemView.prototype.initialize = function() {
    return this.model.on('change', this.render);
  };

  return ItemView;

})(Marionette.ItemView);
},
"4294125673": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/filtered_list/base_model.coffee 
/*
This is dystrophic base Model
*/

var Backbone, BaseModel, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone = require('backbone');

module.exports = BaseModel = (function(_super) {
  __extends(BaseModel, _super);

  function BaseModel() {
    _ref = BaseModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  BaseModel.prototype.defaults = {
    filter: '',
    data: []
  };

  return BaseModel;

})(Backbone.Model);
}};
/* bundle export */
this.ExamplePackage = {
  list_wiget : require(1771610674)
};
}).call(this);