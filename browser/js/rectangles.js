// Generated by clinch 0.3.5
(function() {
  'use strict';
  
      
var dependencies, name_resolver, require, sources, _this = this;

name_resolver = function(parent, name) {
  if (dependencies[parent] == null) {
    throw Error("no dependencies list for parent |" + parent + "|");
  }
  if (dependencies[parent][name] == null) {
    throw Error("no one module resolved, name - |" + name + "|, parent - |" + parent + "|");
  }
  return dependencies[parent][name];
};
require = function(name, parent) {
  var exports, module, module_source, resolved_name, _ref;
  if (!(module_source = sources[name])) {
    resolved_name = name_resolver(parent, name);
    if (!(module_source = sources[resolved_name])) {
      throw Error("can`t find module source code: original_name - |" + name + "|, resolved_name - |" + resolved_name + "|");
    }
  }
  module_source.call(_this,exports = {}, module = {}, function(mod_name) {
    return require(mod_name, resolved_name != null ? resolved_name : name);
  });
  return (_ref = module.exports) != null ? _ref : exports;
};
  dependencies = {"439575464":{"lodash":1154215551,"./rectangles/app_layout":1500471741,"./rectangles/base_model":1680019773,"./rectangles/rectangle_vm":3742996054,"./rectangles/rectangles_collection":1833791310,"./rectangles/rectangle_collection_view":3170064039,"./rectangles/input_vm":3233878734,"./rectangles/input_view":1084698145},"465826014":{"./templates/rectangle_tmpl":1553498644,"backbone.marionette":2486755085},"1084698145":{"./templates/input_tmpl":3693784011,"backbone.marionette":2486755085},"1500471741":{"./templates/layout_tmpl":1954790772,"backbone.marionette":2486755085},"1680019773":{"backbone":3339915730},"1833791310":{"backbone":3339915730},"3170064039":{"./rectangle_view":465826014,"backbone.marionette":2486755085},"3233878734":{"backbone.viewmodel":1052468800},"3742996054":{"backbone.viewmodel":1052468800}};
  sources = {
"439575464": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles.coffee 
/*
This is example of Backbone.ViewModel usage
*/

var AppLayout, BaseModel, InputView, InputViewModel, RectangleCollectionView, RectangleViewModel, RectanglesCollection, init_fn, _;

_ = require('lodash');

AppLayout = require('./rectangles/app_layout');

BaseModel = require('./rectangles/base_model');

RectangleViewModel = require('./rectangles/rectangle_vm');

RectanglesCollection = require('./rectangles/rectangles_collection');

RectangleCollectionView = require('./rectangles/rectangle_collection_view');

InputViewModel = require('./rectangles/input_vm');

InputView = require('./rectangles/input_view');

init_fn = function(main_elem, init_model_state) {
  var base_model, input_vm, layout, models;

  layout = new AppLayout;
  layout.render();
  $(main_elem).append(layout.el);
  base_model = new BaseModel(init_model_state);
  input_vm = new InputViewModel(base_model);
  models = new RectanglesCollection(_.times(5, function() {
    return new RectangleViewModel(base_model);
  }));
  layout.inputRegion.show(new InputView({
    model: input_vm
  }));
  layout.contentRegion.show(new RectangleCollectionView({
    collection: models
  }));
  return null;
};

module.exports = init_fn;
},
"465826014": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/rectangle_view.coffee 
/*
This is view for Rectangle
*/

var Marionette, RectangleView, rectangle_template, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

rectangle_template = require('./templates/rectangle_tmpl');

module.exports = RectangleView = (function(_super) {
  __extends(RectangleView, _super);

  function RectangleView() {
    _ref = RectangleView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  RectangleView.prototype.tagName = 'li';

  RectangleView.prototype.template = rectangle_template;

  RectangleView.prototype.initialize = function() {
    return this.model.on('change', this.render);
  };

  return RectangleView;

})(Marionette.ItemView);
},
"1052468800": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/backbone.viewmodel.coffee 
/*
This is Backbone.ViewModel shim
*/
module.exports = this.Backbone.ViewModel;
},
"1084698145": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/input_view.coffee 
/*
This is Input view
*/

var InputView, Marionette, input_template, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

input_template = require('./templates/input_tmpl');

module.exports = InputView = (function(_super) {
  __extends(InputView, _super);

  function InputView() {
    this.updateConfig = __bind(this.updateConfig, this);    _ref = InputView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  InputView.prototype.template = input_template;

  InputView.prototype.events = {
    'keyup #color-input': 'updateConfig',
    'keyup #size-input': 'updateConfig'
  };

  InputView.prototype.updateConfig = function(e) {
    return this.model.changeData({
      color: $('#color-input').val(),
      size: $('#size-input').val()
    });
  };

  return InputView;

})(Marionette.ItemView);
},
"1154215551": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/lodash.coffee 
/*
This is lodash shim
*/
module.exports = this._;
},
"1500471741": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/app_layout.coffee 
/*
This is Applicaton Layout
*/

var AppLayout, Marionette, layout_template, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

layout_template = require('./templates/layout_tmpl');

module.exports = AppLayout = (function(_super) {
  __extends(AppLayout, _super);

  function AppLayout() {
    _ref = AppLayout.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  AppLayout.prototype.template = layout_template;

  AppLayout.prototype.regions = {
    inputRegion: "#config-input",
    contentRegion: "#color-boxes"
  };

  return AppLayout;

})(Marionette.Layout);
},
"1553498644": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/templates/rectangle_tmpl.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("\n<div" + (jade.attrs({ 'style':("height:" + (self.height) + "px; width: " + (self.width) + "px; background-color: " + (self.color) + ";"), "class": ('colorbox__rectangle__styled') }, {"style":true})) + "></div>");return buf.join("");
}},
"1680019773": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/base_model.coffee 
/*
This is dystrophic base Model
*/

var Backbone, BaseModel, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone = require('backbone');

module.exports = BaseModel = (function(_super) {
  __extends(BaseModel, _super);

  function BaseModel() {
    _ref = BaseModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  BaseModel.prototype.defaults = {
    color: 'blue',
    size: 70
  };

  return BaseModel;

})(Backbone.Model);
},
"1833791310": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/rectangles_collection.coffee 
/*
This is our collections for nice rectangles
*/

var Backbone, RectanglesCollection, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone = require('backbone');

module.exports = RectanglesCollection = (function(_super) {
  __extends(RectanglesCollection, _super);

  function RectanglesCollection() {
    _ref = RectanglesCollection.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  return RectanglesCollection;

})(Backbone.Collection);
},
"1954790772": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/templates/layout_tmpl.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("\n<div>\n  <div id=\"config-input\"></div>\n  <div id=\"color-boxes\"></div>\n</div>");return buf.join("");
}},
"2486755085": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/backbone.marionette.coffee 
/*
This is Backbone shim
*/
module.exports = this.Marionette;
},
"3170064039": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/rectangle_collection_view.coffee 
/*
This is Marionette collection view
*/

var Marionette, RectangleCollectionView, RectangleView, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Marionette = require('backbone.marionette');

RectangleView = require('./rectangle_view');

module.exports = RectangleCollectionView = (function(_super) {
  __extends(RectangleCollectionView, _super);

  function RectangleCollectionView() {
    _ref = RectangleCollectionView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  RectangleCollectionView.prototype.itemView = RectangleView;

  return RectangleCollectionView;

})(Marionette.CollectionView);
},
"3233878734": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/input_vm.coffee 
/*
This is active VM
*/

var InputViewModel, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone.ViewModel = require('backbone.viewmodel');

module.exports = InputViewModel = (function(_super) {
  __extends(InputViewModel, _super);

  function InputViewModel() {
    this.changeData = __bind(this.changeData, this);    _ref = InputViewModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  InputViewModel.prototype.mapping = {
    color: 'color',
    size: 'size'
  };

  InputViewModel.prototype.changeData = function(new_data) {
    return this.model.set(new_data);
  };

  return InputViewModel;

})(Backbone.ViewModel);
},
"3339915730": function(exports, module, require) {
// /Users/meettya/github/colorbox/web_modules/backbone.coffee 
/*
This is Backbone shim
*/
module.exports = this.Backbone;
},
"3693784011": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/templates/input_tmpl.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("\n<div>\n  <label for=\"text\">Enter Color Value (ex. red, green) :</label>\n  <input" + (jade.attrs({ 'id':('color-input'), 'type':('text'), 'value':('' + (self.color) + '') }, {"type":true,"value":true})) + "/>\n</div>\n<div>\n  <label for=\"text\">Enter Size of the box (ex. 50, 70) :</label>\n  <input" + (jade.attrs({ 'id':('size-input'), 'type':('text'), 'value':('' + (self.size) + '') }, {"type":true,"value":true})) + "/>\n</div>");return buf.join("");
}},
"3742996054": function(exports, module, require) {
// /Users/meettya/github/colorbox/src/rectangles/rectangle_vm.coffee 
/*
This is passive VM example
*/

var RectangleViewModel, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Backbone.ViewModel = require('backbone.viewmodel');

module.exports = RectangleViewModel = (function(_super) {
  __extends(RectangleViewModel, _super);

  function RectangleViewModel() {
    _ref = RectangleViewModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  RectangleViewModel.prototype.autoupdate = true;

  RectangleViewModel.prototype.mapping = {
    color: 'color',
    width: 'size',
    height: 'getHeight'
  };

  RectangleViewModel.prototype.getHeight = function() {
    return this.model.get('size') * (1 + Math.random()) | 0;
  };

  return RectangleViewModel;

})(Backbone.ViewModel);
}};
/* bundle export */
this.ExamplePackage = {
  boxer : require(439575464)
};
}).call(this);